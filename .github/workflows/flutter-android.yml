name: Android CI (Flutter)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      target_ref:
        description: "Branch or tag to build (e.g. main / feature/x)"
        required: false
        default: ""

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_ref != '' && github.event.inputs.target_ref || github.ref }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # üîé Ëá™Âä®Êé¢Êµã Flutter È°πÁõÆÁõÆÂΩïÔºàÊ†πÁõÆÂΩï or buchouchi/Ôºâ
      - name: Detect project directory
        id: detect
        run: |
          set -e
          if [ -f pubspec.yaml ] && [ -d lib ]; then
            echo "PROJ_DIR=." >> $GITHUB_ENV
            echo "Project dir = ."
          elif [ -f buchouchi/pubspec.yaml ] && [ -d buchouchi/lib ]; then
            echo "PROJ_DIR=buchouchi" >> $GITHUB_ENV
            echo "Project dir = buchouchi"
          else
            echo "::error ::No Flutter project found. pubspec.yaml/lib not present in root or buchouchi/"
            exit 1
          fi

      - name: Show refs and tree
        run: |
          echo "REF: $GITHUB_REF"
          echo "SHA: $GITHUB_SHA"
          echo "Working in: ${{ env.PROJ_DIR }}"
          ls -lah "${{ env.PROJ_DIR }}"

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Clean build
        run: flutter clean
        working-directory: ${{ env.PROJ_DIR }}

      # Âú®‰∏¥Êó∂ÁõÆÂΩïÈáçÂª∫ Android ÂÆø‰∏ªÔºå‰ªÖÊã∑Âõû android/
      - name: Recreate android host in temp (do not touch lib/ or pubspec)
        run: |
          set -euo pipefail
          tmpdir="$(mktemp -d)"
          echo "Using temp dir: $tmpdir"
          (
            cd "$tmpdir"
            flutter create host \
              --platforms=android \
              --org com.example \
              --project-name buchouchi
          )
          rm -rf android
          rsync -a "$tmpdir/host/android/" android/
          # Â∫îÁî®‰∏≠ÊñáÂêç
          XML="android/app/src/main/res/values/strings.xml"
          if [ -f "$XML" ]; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">‰∏çÊÑÅÂêÉ</string>#g' "$XML"
          fi

          echo "---- android tree (first 2 levels) ----"
          find android -maxdepth 2 -type f | sort

          echo "---- android/settings.gradle ----"
          sed -n '1,200p' android/settings.gradle || true

          echo "---- android/app/build.gradle ----"
          sed -n '1,200p' android/app/build.gradle || true

          echo "---- gradle wrapper ----"
          cat android/gradle/wrapper/gradle-wrapper.properties || true
        working-directory: ${{ env.PROJ_DIR }}

      # ‚úÖ Á°Æ‰øù‰æùËµñÂ≠òÂú®ÔºàÁº∫Â∞±Ëá™Âä®Ê∑ªÂä†Ôºâ
      - name: Ensure sqflite & path deps
        run: |
          set -e
          echo "---- pubspec.yaml (before) ----"
          sed -n '1,200p' pubspec.yaml

          need_add_sqflite=1
          need_add_path=1
          grep -qE '^[[:space:]]*sqflite:' pubspec.yaml && need_add_sqflite=0
          grep -qE '^[[:space:]]*path:' pubspec.yaml && need_add_path=0

          if [ "$need_add_sqflite" -eq 1 ]; then
            echo "Adding sqflite via dart pub add..."
            dart pub add sqflite
          fi
          if [ "$need_add_path" -eq 1 ]; then
            echo "Adding path via dart pub add..."
            dart pub add path
          fi

          echo "---- pubspec.yaml (after) ----"
          sed -n '1,200p' pubspec.yaml
        working-directory: ${{ env.PROJ_DIR }}

      - name: Install dependencies
        run: flutter pub get
        working-directory: ${{ env.PROJ_DIR }}

      # ‰øùÈöúÔºöÁ°ÆËÆ§ lock Êñá‰ª∂ÈáåÁúüÁöÑËß£ÊûêÂà∞‰∫Ü sqflite/pathÔºõÂê¶ÂàôÁõ¥Êé•Â§±Ë¥•ÔºàÊó©‰∫éÁºñËØëÊä•ÈîôÔºâ
      - name: Verify deps resolved in pubspec.lock
        run: |
          set -e
          grep -q "sqflite" pubspec.lock || { echo "::error ::sqflite not found in pubspec.lock"; sed -n '1,200p' pubspec.lock || true; exit 1; }
          grep -q "path:" pubspec.lock || { echo "::error ::path not found in pubspec.lock"; sed -n '1,200p' pubspec.lock || true; exit 1; }
          echo "‚úÖ sqflite & path are resolved."
        working-directory: ${{ env.PROJ_DIR }}

      # Ëã• main.dart ‰ªçÊòØËÆ°Êï∞Âô®Ê®°ÊùøÔºåCI ÂÆπÂô®ÂÜÖËá™Âä®ÊõøÊç¢Ôºà‰∏çÊîπ‰Ω†ÁöÑ‰ªìÂ∫ìÔºâ
      - name: Autofix - replace template main.dart if detected
        run: |
          set -e
          if grep -qE "Flutter Demo Home Page|MyHomePage" lib/main.dart; then
            echo "Template detected. Replacing lib/main.dart with BuchouChi entry..."
            printf "%s\n" \
              "import 'package:flutter/material.dart';" \
              "import 'db/database_helper.dart';" \
              "import 'pages/home_page.dart';" \
              "" \
              "void main() async {" \
              "  WidgetsFlutterBinding.ensureInitialized();" \
              "  await DatabaseHelper.instance.db;" \
              "  runApp(const BuchouChiApp());" \
              "}" \
              "" \
              "class BuchouChiApp extends StatelessWidget {" \
              "  const BuchouChiApp({super.key});" \
              "" \
              "  @override" \
              "  Widget build(BuildContext context) {" \
              "    return MaterialApp(" \
              "      title: '‰∏çÊÑÅÂêÉ'," \
              "      theme: ThemeData(" \
              "        colorScheme: ColorScheme.fromSeed(seedColor: const Color(0xFF4CAF50))," \
              "        useMaterial3: true," \
              "      )," \
              "      home: const HomePage()," \
              "    );" \
              "  }" \
              "}" \
              > lib/main.dart
            sed -n '1,120p' lib/main.dart
          fi
        working-directory: ${{ env.PROJ_DIR }}

      - name: Guard - ensure template removed
        run: |
          set -e
          if grep -R --line-number -E "Flutter Demo Home Page|MyHomePage" lib/ ; then
            echo "::error ::Flutter demo template still present."
            exit 1
          fi
          test -f lib/pages/home_page.dart || { echo "::error ::lib/pages/home_page.dart not found"; exit 1; }
          test -f lib/db/database_helper.dart || { echo "::error ::lib/db/database_helper.dart not found"; exit 1; }
        working-directory: ${{ env.PROJ_DIR }}

      # üõ† ÊûÑÂª∫ÔºöÊåâ ABI ÊãÜÂåÖ + ÊãÜÁ¨¶Âè∑
      - name: Build Android APKs (per ABI) + symbols
        run: |
          flutter build apk --release \
            --split-per-abi \
            --split-debug-info=build/symbols \
            --obfuscate
          # Â¶Ç‰πüÊÉ≥Ë¶Å AABÔºåËØ∑ÂèñÊ∂à‰∏ãË°åÊ≥®ÈáäÔºö
          # flutter build appbundle --release --split-debug-info=build/symbols --obfuscate
        working-directory: ${{ env.PROJ_DIR }}

      # üëÄ ÂàóÂá∫‰∫ßÁâ©Ôºå‰æø‰∫éÊéíÊü•
      - name: List build outputs (debug)
        run: |
          echo "APK outputs:"
          ls -lah ${{ env.PROJ_DIR }}/build/app/outputs/flutter-apk || true
          echo "AAB outputs:"
          ls -lah ${{ env.PROJ_DIR }}/build/app/outputs/bundle/release || true

      # üì¶ Êî∂ÈõÜÊâÄÊúâ APK/AAB/Á¨¶Âè∑ Âà∞ dist/
      - name: Collect artifacts
        run: |
          set -e
          cd "${{ env.PROJ_DIR }}"
          mkdir -p dist
          shopt -s nullglob
          # APK
          cp -v build/app/outputs/flutter-apk/*.apk dist/ || true
          # AABÔºàËã•‰∏äÈù¢ÊûÑÂª∫‰∫ÜÔºâ
          cp -v build/app/outputs/bundle/release/*.aab dist/ || true
          # Á¨¶Âè∑Êñá‰ª∂
          if compgen -G "build/symbols/*" > /dev/null; then
            tar -czf dist/symbols.tar.gz -C build symbols
          fi
          ls -lah dist

      # ‚¨ÜÔ∏è Áªü‰∏Ä‰∏ä‰º†
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: ${{ env.PROJ_DIR }}/dist/**
          if-no-files-found: error
