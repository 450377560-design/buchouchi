name: Android CI (Flutter)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      target_ref:
        description: "Branch or tag to build (e.g. main / feature/x)"
        required: false
        default: ""

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_ref != '' && github.event.inputs.target_ref || github.ref }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter Doctor
        run: flutter doctor -v

      # 确认位置 & 关键文件存在（避免在错误目录执行）
      - name: Guard - ensure project root
        run: |
          set -e
          ls -lah
          test -f pubspec.yaml || { echo "::error ::pubspec.yaml not found in current directory"; exit 1; }
          test -d lib || { echo "::error ::lib/ directory not found"; exit 1; }

      - name: Clean build
        run: flutter clean

      # ⚠️ 关键：删除旧 android/，彻底避免残留
      - name: Remove old Android host
        run: |
          set -e
          rm -rf android
          echo "android/ removed."

      # 仅重建 Android 宿主（不会覆盖 lib/）
      - name: Regenerate Android host only
        run: |
          set -euo pipefail
          flutter --version
          flutter create . \
            --platforms=android \
            --org com.example \
            --project-name buchouchi \
            --overwrite

      # 打印关键文件，确认是新模板
      - name: Debug - show Android gradle files
        run: |
          set -e
          echo "---- android/settings.gradle ----"
          sed -n '1,200p' android/settings.gradle || true
          echo "---- android/app/build.gradle ----"
          sed -n '1,200p' android/app/build.gradle || true
          echo "---- gradle wrapper ----"
          cat android/gradle/wrapper/gradle-wrapper.properties || true

      # （可选）设置中文应用名
      - name: Set app name to Chinese
        run: |
          set -e
          XML="android/app/src/main/res/values/strings.xml"
          if [ -f "$XML" ]; then
            sed -i 's#<string name="app_name">[^<]*</string>#<string name="app_name">不愁吃</string>#g' "$XML"
          fi

      # 防止模板 main.dart（如果你还没改好，这里会自动替换，仅在 CI 容器内）
      - name: Autofix - replace template main.dart if detected (no heredoc)
        run: |
          set -e
          if grep -qE "Flutter Demo Home Page|MyHomePage" lib/main.dart; then
            echo "Template detected. Replacing lib/main.dart with BuchouChi entry..."
            printf "%s\n" \
              "import 'package:flutter/material.dart';" \
              "import 'db/database_helper.dart';" \
              "import 'pages/home_page.dart';" \
              "" \
              "void main() async {" \
              "  WidgetsFlutterBinding.ensureInitialized();" \
              "  await DatabaseHelper.instance.db;" \
              "  runApp(const BuchouChiApp());" \
              "}" \
              "" \
              "class BuchouChiApp extends StatelessWidget {" \
              "  const BuchouChiApp({super.key});" \
              "" \
              "  @override" \
              "  Widget build(BuildContext context) {" \
              "    return MaterialApp(" \
              "      title: '不愁吃'," \
              "      theme: ThemeData(" \
              "        colorScheme: ColorScheme.fromSeed(seedColor: const Color(0xFF4CAF50))," \
              "        useMaterial3: true," \
              "      )," \
              "      home: const HomePage()," \
              "    );" \
              "  }" \
              "}" \
              > lib/main.dart
            sed -n '1,120p' lib/main.dart
          fi

      # 保障：确保不是旧模板 & 关键文件存在
      - name: Guard - ensure template removed
        run: |
          set -e
          if grep -R --line-number -E "Flutter Demo Home Page|MyHomePage" lib/ ; then
            echo "::error title=Template app detected::Your lib/ still contains the Flutter demo template."
            exit 1
          fi
          test -f lib/pages/home_page.dart || { echo "::error ::lib/pages/home_page.dart not found"; exit 1; }
          test -f lib/db/database_helper.dart || { echo "::error ::lib/db/database_helper.dart not found"; exit 1; }

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: buchouchi-app-release
          path: build/app/outputs/flutter-apk/app-release.apk
